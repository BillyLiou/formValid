{"version":3,"sources":["ng://aa-compare-equal/lib/compareEqual.ts","ng://aa-compare-equal/lib/compare-equal.directive.ts","ng://aa-compare-equal/lib/valid-mail.directive.ts","ng://aa-compare-equal/lib/aa-compare-equal.module.ts"],"names":["mailFormat","RegExp","COMPARE_EQUAL_VALIDATOR","provide","NG_VALIDATORS","useExisting","forwardRef","CompareEqualDirective","multi","el","this","nativeElement","style","color","prototype","validate","control","controlName","aaCompareEqual","parent","get","value","compareEqual","Directive","args","selector","providers","ElementRef","Input","ValidMailDirective","test","emailFormat","verifyMailFormat","AaCompareEqualModule","NgModule","declarations","imports","FormsModule","exports"],"mappings":"qVAEMA,EAAa,IAAIC,OAAO,yDCExBC,EAA+B,CACnCC,QAASC,EAAAA,cACTC,YAAaC,EAAAA,YAAU,WAAO,OAAAC,KAC9BC,OAAO,GAGTD,EAAA,WAUE,SAAAA,EAAoBE,GAAAC,KAAAD,GAAAA,EAClBC,KAAKD,GAAGE,cAAcC,MAAMC,MAAQ,MAIxC,OATEN,EAAAO,UAAAC,SAAA,SAASC,GACP,ODbyBC,ECaLP,KAAKQ,eDZ3B,SAAQF,GACN,OAAKA,EAAQG,QAAUH,EAAQG,OAAOC,IAAIH,GAAaI,QAAUL,EAAQK,MAGhE,CAAEC,cAAc,GAFhB,OCUgCN,GDb7C,IAA6BC,uBCM5BM,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,mBACVC,UAAW,CAACxB,gDAZMyB,EAAAA,sDAejBC,EAAAA,SAUHrB,EAfA,OCNML,EAA+B,CACnCC,QAASC,EAAAA,cACTC,YAAaC,EAAAA,YAAU,WAAO,OAAAuB,KAC9BrB,OAAO,GAGTqB,EAAA,WASE,SAAAA,KAEF,OANEA,EAAAf,UAAAC,SAAA,SAASC,GACP,OFDF,SAAQA,GACN,OAAIhB,EAAW8B,KAAKd,EAAQK,OACnB,KAEA,CAAEU,aAAa,GEHjBC,CAAmBhB,wBAN7BO,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,gBACVC,UAAW,CAACxB,6CASd2B,EAXA,GCVAI,EAAA,WAOA,SAAAA,KAOoC,2BAPnCC,EAAAA,SAAQV,KAAA,CAAC,CACRW,aAAc,CAAC5B,EAAuBsB,GACtCO,QAAS,CACPC,EAAAA,aAEFC,QAAS,CAAC/B,EAAuBsB,OAECI,EAdpC","sourcesContent":["import { ValidatorFn, AbstractControl, Validators, ValidationErrors, RangeValueAccessor } from '@angular/forms';\n\nconst mailFormat = new RegExp('^[a-zA-Z0-9.-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$');\n\nexport function compareEqual(controlName: string): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (!control.parent || control.parent.get(controlName).value === control.value) {\n      return null;\n    } else {\n      return { compareEqual: true };\n    }\n  };\n}\n\nexport function verifyMailFormat(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (mailFormat.test(control.value)) {\n      return null;\n    } else {\n      return { emailFormat: true };\n    }\n  };\n}\n","import { Directive, ElementRef, forwardRef, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { compareEqual } from './compareEqual';\n\nconst COMPARE_EQUAL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => CompareEqualDirective),\n  multi: true\n};\n\n@Directive({\n  selector: '[aaCompareEqual]',\n  providers: [COMPARE_EQUAL_VALIDATOR]\n})\nexport class CompareEqualDirective implements Validator {\n  @Input() aaCompareEqual;\n  validate(control: AbstractControl): ValidationErrors {\n    return compareEqual(this.aaCompareEqual)(control);\n  }\n\n  constructor(private el: ElementRef) {\n    this.el.nativeElement.style.color = 'red';\n  }\n\n\n}\n","import { Directive, forwardRef, HostListener } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { verifyMailFormat } from './compareEqual';\n\nconst COMPARE_EQUAL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => ValidMailDirective),\n  multi: true\n};\n\n@Directive({\n  selector: '[aaValidMail]',\n  providers: [COMPARE_EQUAL_VALIDATOR]\n})\nexport class ValidMailDirective implements Validator {\n  validate(control: AbstractControl): ValidationErrors {\n    return verifyMailFormat()(control);\n  }\n\n  constructor() { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CompareEqualDirective } from './compare-equal.directive';\nimport { ValidMailDirective } from './valid-mail.directive';\n\n\n\n@NgModule({\n  declarations: [CompareEqualDirective, ValidMailDirective],\n  imports: [\n    FormsModule\n  ],\n  exports: [CompareEqualDirective, ValidMailDirective]\n})\nexport class AaCompareEqualModule { }\n"]}